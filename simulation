import numpy as np
import cv2
import matplotlib.pyplot as plt

lena = cv2.imread('Lena.png')
gray_lena = cv2.cvtColor(lena, cv2.COLOR_BGR2GRAY)
img = gray_lena

def Fourier(img):
    fp = np.fft.fft2(img)
    fp = np.fft.fftshift(fp)
    return fp

def Inverse_fourier(img):
    fp = np.fft.ifft2(img)
    return fp

def Blur(img, size):
    fp = Fourier(img)
    centre = [int(img.shape[0]/2),int(img.shape[1]/2)]
    mask = Circle(img.shape, size, centre)
    fp = fp*mask
    imgp = Inverse_fourier(fp)
    return imgp

def Outline(img, size):
    fp = Fourier(img)
    centre = [int(img.shape[0]/2),int(img.shape[1]/2)]
    mask = np.ones(img.shape)
    mask += -Circle(img.shape, size, centre)
    fp = fp*mask
    imgp = Inverse_fourier(fp)
    return imgp

def Circle(img_shape, radius, centre):
    circle = np.zeros(img_shape)
    for ix in range(circle.shape[0]):
        for iy in range(circle.shape[0]):
            distance = np.sqrt((ix-centre[0])**2 + (iy-centre[1])**2)
            if distance <= radius:
                circle[ix, iy] += 1
    return circle

fp = Fourier(img)
imgp = Inverse_fourier(fp) 

blurry = Blur(img, 20)
outlined = Outline(img, 30)



#----------------------------------Display------------------------------
plt.figure()
plt.subplot(221)
plt.title('Image')
plt.imshow(img, cmap='gray')
plt.subplot(222)
plt.title('Fourier Plane')
plt.imshow(abs(fp), cmap='gray')
#plt.imshow(abs(imgp), cmap='gray')
plt.subplot(223)
plt.title('Low pass filter')
plt.imshow(abs(blurry), cmap='gray')
plt.subplot(224)
plt.title('High pass filter')
plt.imshow(abs(outlined), cmap='gray')
plt.tight_layout()
